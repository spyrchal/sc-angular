{"version":3,"sources":["../src/bootstrap.js","../src/services/scCore.js","../src/services/scCrud.js","../src/services/scMxl.js"],"names":[],"mappings":"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","file":"sc-angular.js","sourcesContent":["(function () {\r\n    angular.module('sociocortex', []);\r\n    \r\n    angular.module('sociocortex').value('scConnection', {\r\n        baseUri: 'http://131.159.30.153',\r\n        apiVersion: '0.1'\r\n    });\r\n})();\r\n","(function () {\r\n    angular.module('sociocortex').service('scCore', ['$http', '$q', 'scConnection', function scCore($http, $q, scConnection) {\r\n        return {\r\n            scRequest: scRequest,\r\n            mxlRequest: mxlRequest\r\n        };\r\n        \r\n        function scRequest(options) {\r\n            return $q(function performScRequest(resolve, reject) {\r\n                if (!angular.isObject(options) ||\r\n                    !angular.isObject(options.auth) ||\r\n                    !angular.isString(options.httpMethod) ||\r\n                    !angular.isString(options.path) ||\r\n                    !angular.isString(options.auth.user) ||\r\n                    !angular.isString(options.auth.password) ||\r\n                    (options.params && !angular.isObject(options.params)) ||\r\n                    (options.data && !angular.isObject(options.data))) {\r\n                    console.trace();\r\n                    console.error('sociocortex#scRequest: invalid options argument', options);\r\n                    return reject({\r\n                        error: 'Validation Failed',\r\n                        message: 'invalid options argument'\r\n                    });     \r\n                }\r\n                    \r\n                return $http({\r\n                    headers: getAuthorizationHeader(options.auth.user, options.auth.password),\r\n                    url: getFullUrl(options.path),\r\n                    method: options.httpMethod,\r\n                    params: options.params,\r\n                    data: options.data\r\n                }).then(resolve, reject);\r\n            });\r\n        }\r\n\r\n        function mxlRequest(options) {\r\n            return $q(function performMxlRequest(resolve, reject) {\r\n                var mxlMethodParameters = null;\r\n                if (!angular.isObject(options.mxlMethodParameters)) {\r\n                    mxlMethodParameters = { expression: options.mxlMethodParameters };\r\n                }\r\n    \r\n                return scRequest({\r\n                    httpMethod: options.httpMethod,\r\n                    path: combinePaths(getUrlPartFromContext(options.context), 'mxl'),\r\n                    auth: options.auth,\r\n                    params: { method: options.mxlMethod },\r\n                    data: mxlMethodParameters\r\n                }).then(resolve, reject);\r\n            });\r\n        }\r\n    \r\n        function getAuthorizationHeader(user, password) {\r\n            return { Authorization: 'Basic ' + window.btoa(user + ':' + password) };\r\n        }\r\n        \r\n        function combinePaths(str1, str2) {\r\n            if (str1.charAt(str1.length - 1) === '/') {\r\n                str1 = str1.substr(0, str1.length - 1);\r\n            }\r\n\r\n            if (str2.charAt(0) === '/') {\r\n                str2 = str2.substr(1, scConnection.baseUri.length - 1);\r\n            }\r\n\r\n            return str1 + '/' + str2;\r\n        }\r\n        \r\n        function getFullUrl(urlPart) {\r\n            var uri = combinePaths(scConnection.baseUri, 'api/' + scConnection.apiVersion);\r\n            return combinePaths(uri, urlPart);\r\n        }\r\n        \r\n        function getUrlPartFromContext(context) {\r\n            if (angular.isObject(context)) {\r\n                if (context.entityId) {\r\n                    return 'entities/' + context.entityId;\r\n                }\r\n                if (context.typeId) {\r\n                    return 'types/' + context.typeId;\r\n                }\r\n                if (context.workspaceId) {\r\n                    return 'workspaces/' + context.workspaceId;\r\n                }\r\n                return '';\r\n            }\r\n\r\n            return 'workspaces/' + context;\r\n        }\r\n    }]);\r\n})();\r\n","(function () {\r\n    var PATH_ATTRIBUTES = 'attributes',\r\n        PATH_GROUPS = 'groups',\r\n        PATH_USERS = 'users',\r\n        PATH_TYPES = 'types',\r\n        PATH_WORKSPACES = 'workspaces';\r\n    \r\n    angular.module('sociocortex').service('scCrud', ['$q', 'scCore', function scCrudService($q, scCore) {        \r\n        return {\r\n            types: {\r\n                findAll: findAllTypes,\r\n                findOne: findOneType\r\n            },\r\n            groups: {\r\n                findAll: findAllGroups\r\n            },\r\n            users: {\r\n                findAll: findAllUsers\r\n            }\r\n        };\r\n        \r\n        function findAllGroups(auth) {\r\n            return genericFindAll(auth, PATH_GROUPS);\r\n        }\r\n        \r\n        function findAllUsers(auth) {\r\n            return genericFindAll(auth, PATH_USERS);\r\n        }\r\n        \r\n        function findAllTypes(auth, workspaceId, includeAttributes) {\r\n            return $q(function performFindAllTypes(resolve, reject) {\r\n                var path = angular.isString(workspaceId) ? PATH_WORKSPACES + '/' + workspaceId + '/' + PATH_TYPES : PATH_TYPES;\r\n                \r\n                genericFindAll(auth, path).then(function resolveTypes(resTypes) {\r\n                    if (!includeAttributes) {\r\n                        return resolve(resTypes);\r\n                    }\r\n                    \r\n                    // resolve attributes (which may lead to a significant number of API calls)\r\n                    var promises = [], currTypeId;\r\n                    for (var i = 0; i < resTypes.length; i++) {\r\n                        currTypeId = resTypes[i].id;\r\n                        promises.push(findTypeAttributes(auth, currTypeId));\r\n                    }\r\n                    $q.all(promises).then(function resolveAttributesOfTypes(attributeCollection) {\r\n                        for (i = 0; i < resTypes.length; i++) {\r\n                            resTypes[i].attributes = attributeCollection[i].data;\r\n                        }\r\n                        return resolve(resTypes);\r\n                    }, reject);\r\n                }, reject);\r\n            });\r\n        }\r\n        \r\n        function findOneType(auth, typeId, includeAttributes) {\r\n            return $q(function performFindOneType(resolve, reject) {\r\n                var err = validate([\r\n                    [ auth, angular.isObject, 'auth is an object' ],\r\n                    [ typeId, angular.isString, 'typeId is a string' ]\r\n                ]);\r\n                if (err) { return reject(err); }\r\n                \r\n                scCore.scRequest({\r\n                    httpMethod: 'GET',\r\n                    path: 'types/' + typeId,\r\n                    auth: auth\r\n                }).then(function (res) {\r\n                    if (!includeAttributes) {\r\n                        return resolve(res.data);\r\n                    }\r\n                    \r\n                    // resolve attributes\r\n                    var resType = res.data;\r\n                    findTypeAttributes(auth, typeId).then(function resolveTypeAttributes(res) {\r\n                        resType.attributes = res.data;\r\n                        return resolve(resType);\r\n                    }, reject);\r\n                }, reject);\r\n            });\r\n        }\r\n        \r\n        function findTypeAttributes(auth, typeId) {\r\n            return scCore.scRequest({\r\n                httpMethod: 'GET',\r\n                path: PATH_TYPES + '/' + typeId + '/' + PATH_ATTRIBUTES,\r\n                auth: auth\r\n            });\r\n        }\r\n        \r\n        function validate(validationSequence) {\r\n            var reference, validator, message;\r\n            for (var i = 0; i < validationSequence.length; i++) {\r\n                reference = validationSequence[i][0];\r\n                validator = validationSequence[i][1];\r\n                message = validationSequence[i][2];\r\n                \r\n                if (!validator(reference)) {\r\n                    console.trace();\r\n                    console.error('validation failed', validationSequence);\r\n                    return {\r\n                        error: 'Invalid Parameter',\r\n                        message: message || 'no details provided'\r\n                    };\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        \r\n        function genericFindAll(auth, path) {\r\n            return $q(function performFindAll(resolve, reject) {\r\n                scCore.scRequest({\r\n                    httpMethod: 'GET',\r\n                    path: path,\r\n                    auth: auth\r\n                }).then(function (res) {\r\n                    return resolve(res.data);\r\n                }, reject);\r\n            });\r\n        }\r\n    }]);\r\n})();\r\n","(function () {\r\n    angular.module('sociocortex').service('scMxl', ['$cacheFactory', '$q', 'scCore', function scMxlService($cacheFactory, $q, scCore) {\r\n        var autoCompleteCache = $cacheFactory('mxlAutoCompleteCache');\r\n        \r\n        return {\r\n            autoComplete: autoComplete,\r\n            query: query,\r\n            validate: validate\r\n        };\r\n        \r\n        function autoComplete(workspaceId, auth) {\r\n            return $q(function performAutoComplete(resolve, reject) {\r\n                var cachedHints = autoCompleteCache.get(workspaceId);\r\n    \r\n                if (cachedHints) {\r\n                    return resolve(cachedHints);\r\n                }\r\n    \r\n                scCore.mxlRequest({\r\n                    httpMethod: 'GET',\r\n                    auth: auth,\r\n                    context: { workspaceId: workspaceId },\r\n                    mxlMethod: 'autoComplete'\r\n                }).then(function processMxlResponse(hints) {\r\n                    autoCompleteCache.put(workspaceId, hints);\r\n                    return resolve(hints);\r\n                }, reject);\r\n            });\r\n        };\r\n        \r\n        function query(mxlMethodParameters, context, auth) {\r\n            return scCore.mxlRequest({\r\n                httpMethod: 'POST',\r\n                auth: auth,\r\n                context: context,\r\n                mxlMethod: 'query',\r\n                mxlMethodParameters: mxlMethodParameters\r\n            });\r\n        };\r\n        \r\n        function validate(mxlMethodParameters, context, auth) {\r\n            return scCore.mxlRequest({\r\n                httpMethod: 'POST',\r\n                auth: auth,\r\n                context: context,\r\n                mxlMethod: 'validate',\r\n                mxlMethodParameters: mxlMethodParameters\r\n            });\r\n        }\r\n    }]);\r\n})();\r\n"]}